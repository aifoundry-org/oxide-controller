name: Publish Docker Image

on:
  push:
    tags:
      - 'v*'

jobs:
  build-binaries:
    name: Build Binaries    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: |
            make build-all

      - name: Create SHA256 checksum for files
        run: |
          for file in bin/*; do
            sha256sum "$file" | awk '{ print $1 }' > "${file}.sha256"
          done
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: true
          files: |
            bin/*

  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
    
    env:
      IMAGE_NAME: ${{ secrets.IMAGE_NAME || 'aifoundryorg/oxide-controller' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
      
      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DH_REGISTRY_USERNAME }}
          password: ${{ secrets.DH_REGISTRY_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64,linux/riscv64
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
